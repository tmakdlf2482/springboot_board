<div class="card m-2" id="comments-new">
  <div class="card-body">
    <!-- 댓글 작성 폼 -->
    <form>
      <!-- 닉네임 입력 -->
      <div class="mb-3">
        <label class="form-label">닉네임</label>
        <input type="text" class="form-control form-control-sm" id="new-comment-nickname">
      </div>

      <!-- 댓글 본문 입력 -->
      <div class="mb-3">
        <label class="form-label">댓글 내용</label>
        <textarea type="text" class="form-control form-control-sm" rows="3" id="new-comment-body"></textarea>
      </div>

      <!-- 히든 인풋 -->
      <!-- 댓글은 게시글에 포함되므로, 해당 게시글의 id를 hidden input으로 가져야 함 -->
      {{#article}}
        <input type="hidden" id="new-comment-article-id" value="{{id}}">
      {{/article}}

      <!-- 전송 버튼 -->
      <button type="button" class="btn btn-outline-primary btn-sm" id="comment-create-btn">댓글 작성</button>
    </form>
  </div>
</div>

<script>
{
  // 댓글 생성 버튼
  const commentCreateBtn = document.querySelector('#comment-create-btn');

  commentCreateBtn.addEventListener('click', function() {
    // 새 댓글 객체 생성
    const comment = {
       nickname: document.querySelector('#new-comment-nickname').value,
       body: document.querySelector('#new-comment-body').value,
       article_id: document.querySelector('#new-comment-article-id').value, // 반드시 CommentDto 클래스의 @JsonProperty("article_id")에서 article_id 이 이름으로 해 줘야함
    };

    // 댓글 객체 출력
    console.log(comment);

    // fetch()
    const url = '/api/articles/' + comment.article_id + '/comments';

    fetch(url, {
      method: 'post',                // POST 요청
      body: JSON.stringify(comment), // 위에서 만든 comment 객체를 JSON으로 바꿔서 보냄
      headers: {
        "Content-Type": "application/json",
      },
    })
    .then((response) => {
      // http 응답 코드에 따른 메시지
      const msg = (response.ok) ? '댓글이 등록되었습니다.' : '댓글 등록에 실패하였습니다.';

      alert(msg);

      // 현재 페이지 새로고침
      window.location.reload();
    });
  });
}
</script>